#!/usr/bin/env python3

"""
-----------------------------------------------------------------------------
System   : christianwestbrook.dev
Script   : post-receive
Engineer : Christian Westbrook
Abstract : This is a Git post-receive hook used to kick off a CI/CD
           pipeline whenever the christianwestbrook.dev repository receives
           a push with commits to a branch.

           Documentation on post-receive hooks:
           https://git-scm.com/docs/githooks#post-receive
           https://git-scm.com/docs/git-receive-pack#_post_receive_hook
-----------------------------------------------------------------------------
"""

import subprocess
import sys

def main():
    """
    This function executes whenever Git receives a push.
    Git feeds each updated reference as a line to the post-receive hook's
    stdin in the format: <old-commit> <new-commit> <reference-name>

    Documentation on Linux IO streams, including stdin:
    https://man7.org/linux/man-pages/man3/stdin.3.html
    """

    # Process one line of input for each successfully updated reference
    for line in sys.stdin:
        _, _, reference_name = line.strip().split()

        if reference_name.startswith("refs/heads/"):
            branch = reference_name.replace("refs/heads/", "")
            job_name = "christianwestbrook.dev/" + branch

            subprocess.run([
                'ssh', '-l', 'christian-westbrook',
                '-p', '8081',
                'homelab-01', 'build', job_name
            ], check=True)

def job_exists(job):
    """
    Checks whether the given build job is available, implying that the branch
    specified by the job has already been detected by Jenkins.
    """

    result = subprocess.run([
        'ssh', '-l', 'christian-westbrook',
        '-p', '8081',
        'homelab-01', 'get-job', job
    ], capture_output=True, check=False)

    return result.returncode == 0

if __name__ == "__main__":
    main()
