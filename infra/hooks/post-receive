#!/usr/bin/env python3

"""
-----------------------------------------------------------------------------
System   : christianwestbrook.dev
Script   : post-receive
Engineer : Christian Westbrook
Abstract : This is a Git post-receive hook used to kick off a CI/CD
           pipeline whenever the christianwestbrook.dev repository receives
           a push with commits to a branch.

           Documentation on post-receive hooks:
           https://git-scm.com/docs/githooks#post-receive
           https://git-scm.com/docs/git-receive-pack#_post_receive_hook
-----------------------------------------------------------------------------
"""

import subprocess
import sys

def main():
    """
    Executes whenever Git receives a push.
    Git feeds each updated reference as a line to the post-receive hook's
    stdin in the format: <old-commit> <new-commit> <reference-name>

    Documentation on Linux IO streams, including stdin:
    https://man7.org/linux/man-pages/man3/stdin.3.html
    """

    intro()

    # Process one line of input for each successfully updated reference
    for line in sys.stdin:
        _, _, reference = line.strip().split()

        if reference.startswith("refs/heads/"):
            branch = reference.replace("refs/heads/", "")
            job = "christianwestbrook.dev/" + branch
            print("Detected a push to " + branch)

            if job_exists(job):
                print("Found the job " + job)
                print("Triggering a build job for " + job)
                trigger_build(job)
            else:
                print("Unable to find the job " + job)
                print("If you would like to trigger a build, navigate to the")
                print("Jenkins web console and scan the Pipeline before ")
                print("triggering a build manually")
    print("")

def job_exists(job):
    """
    Checks whether the given build job is available, implying that the branch
    specified by the job has already been detected by Jenkins.
    """

    result = subprocess.run([
        'ssh', '-l', 'christian-westbrook',
        '-p', '8081',
        'homelab-01', 'get-job', job
    ], capture_output=True, check=False)

    return result.returncode == 0

def trigger_build(job):
    """
    Triggers a Jenkins Pipeline build job.
    """
    subprocess.run([
        'ssh', '-l', 'christian-westbrook',
        '-p', '8081',
        'homelab-01', 'build', job
    ], check=True)


def intro():
    """
    Prints a FIGlet font introduction to the post-receive hook
    """
    print()
    print("|---------------------------------------------------------|")
    print("|  _    _           _   _                     _           |")
    print("| | |  | |         | | | |                   | |          |")
    print("| | |  | | ___  ___| |_| |__  _ __ ___   ___ | | __       |")
    print("| | |/\\| |/ _ \\/ __| __| '_ \\| '__/ _ \\ / _ \\| |/ /       |")
    print("| \\  /\\  /  __/\\__ \\ |_| |_) | | | (_) | (_) |   <        |")
    print("|  \\/  \\/ \\___||___/\\__|_.__/|_|  \\___/ \\___/|_|\\_\\       |")

    print("|  _____                             _   _                |")
    print("| /  __ \\                           | | (_)               |")
    print("| | /  \\/ ___  _ __ ___  _ __  _   _| |_ _ _ __   __ _    |")
    print("| | |    / _ \\| '_ ` _ \\| '_ \\| | | | __| | '_ \\ / _` |   |")
    print("| | \\__/\\ (_) | | | | | | |_) | |_| | |_| | | | | (_| |   |")
    print("|  \\____/\\___/|_| |_| |_| .__/ \\__,_|\\__|_|_| |_|\\__, |   |")
    print("|                       | |                       __/ |   |")
    print("|                       |_|                      |___/    |")
    print("|                                                         |")
    print("|---------------------------------------------------------|")
    print()

if __name__ == "__main__":
    main()
